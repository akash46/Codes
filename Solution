import java.io.*;
import java.util.StringTokenizer;
public class Solution {
	public static void main(String[] args) throws IOException{
		Reader.init(System.in);
		int t = Reader.nextInt();
		int n = Reader.nextInt();
		RotateArray rotate = new RotateArray();
		int[] arr = new int[t];
		for(int i=0; i<t; i++){
			arr[i] = Reader.nextInt();
		}
		rotate.leftRotate(arr,n,t);
        rotate.printArray(arr,t);
	}
	static class RotateArray 
	{
	    void leftRotate(int arr[], int d, int n) 
	    {
	        int i;
	        for (i = 0; i < d; i++)
	            leftRotatebyOne(arr, n);
	    }   void leftRotatebyOne(int arr[], int n) 
	    {
	        int i, temp;
	        temp = arr[0];
	        for (i = 0; i < n - 1; i++)
	            arr[i] = arr[i + 1];
	        arr[i] = temp;
	    }
	    void printArray(int arr[], int size) 
	    {
	        int i;
	        for (i = 0; i < size; i++)
	            System.out.print(arr[i] + " ");
	    }
	}
}

/** Class for buffered reading int and double values */
class Reader {
    static BufferedReader reader;
    static StringTokenizer tokenizer;

    /** call this method to initialize reader for InputStream */
    static void init(InputStream input) {
        reader = new BufferedReader(
                     new InputStreamReader(input) );
        tokenizer = new StringTokenizer("");
    }

    /** get next word */
    static String next() throws IOException {
        while ( ! tokenizer.hasMoreTokens() ) {
            tokenizer = new StringTokenizer(
                   reader.readLine() );
        }
        return tokenizer.nextToken();
    }

    static int nextInt() throws IOException {
        return Integer.parseInt( next() );
    }
	
    static double nextDouble() throws IOException {
        return Double.parseDouble( next() );
    }
}

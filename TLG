import java.io.*;
import java.lang.*;
import java.util.StringTokenizer;
public class TLG {
	public static void main(String[] args) throws IOException{
		Reader.init(System.in);
		int t = Reader.nextInt();
		while(t-- >0){
			int max1 =0;
			int max2 =0;
			int n = Reader.nextInt();
			int m = Reader.nextInt();
			int a[] = new int[n];
			int b[] = new int[m];
			int x[] = new int[t];
			int y[] = new int[t];
			for(int i=0; i<a.length; i++)
			{
				for(int j=0; j<b.length; j++){
					for(int k=0; k<x.length; k++){
						for(int l=0; l<y.length; l++){
						if(i>j){
							x[k] = (a[i] - b[j]);
						}else{
							y[l] = (b[j] - a[i]);
						}
						max1 = Math.max(max1, x[k]);
						max2 = Math.max(max2, y[l]);
					}
				}
			}
		}
			if(max1>max2){
				System.out.print(1);
				System.out.println(max1);
			}else{
				System.out.print(2);
				System.out.print(max2);
			}
	}
	}
}













/** Class for buffered reading int and double values */
class Reader {
    static BufferedReader reader;
    static StringTokenizer tokenizer;

    /** call this method to initialize reader for InputStream */
    static void init(InputStream input) {
        reader = new BufferedReader(
                     new InputStreamReader(input) );
        tokenizer = new StringTokenizer("");
    }

    /** get next word */
    static String next() throws IOException {
        while ( ! tokenizer.hasMoreTokens() ) {
            tokenizer = new StringTokenizer(
                   reader.readLine() );
        }
        return tokenizer.nextToken();
    }

    static int nextInt() throws IOException {
        return Integer.parseInt( next() );
    }
	
    static double nextDouble() throws IOException {
        return Double.parseDouble( next() );
    }
}
